name: Build and Release for iRock Mobile Programmer

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build-and-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Extract version from Cargo.toml
        id: cargo_version
        run: |
          echo "version=$(cargo metadata --format-version=1 --no-deps \
            | jq -r '.packages[] | select(.name==\"iRockProgrammer\").version')" \
          >> $GITHUB_OUTPUT

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies (jq, cross & cargo-bundle)
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          cargo install --locked cross cargo-bundle

      - name: Cross‑Bundle App für Linux Desktop
        run: cross bundle --release --target aarch64-unknown-linux-gnu

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.cargo_version.outputs.version }}
          name: Release für iRock Mobile Programmer
          body: "Automatischer Build für iRock Mobile Programmer (aarch64)"
          files: target/aarch64-unknown-linux-gnu/release/bundle/iRockProgrammer.deb
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
